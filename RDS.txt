RDS : Relational Database Service : 7 Relational db engines.
--> Amazon Aurora (Mysql Compatable / Postgresql Compatable)
--> MySQL
--> MS SQL	
--> PostgreSQL
--> MariaDB
--> Oracle
--> IBM Db2

______

ec2 instance --> OS Level --> Install anything --> We have to take care below things.
Licensing..??
UPgradations..?? 
Backup..??
HA / FT..??

RDS --> Everything managed by AWS.

--> We won't get any choice to login to OS level.

GUI tools to manage the Databases : 
--> Amazon Aurora : Mysql Workbench / pgadmin
--> MySQL	: Mysql Workbench
--> MS SQL	: ssms (Microsoft Sql Server Management Studio)
--> PostgreSQL	: pgadmin
--> MariaDB	: workbench
--> Oracle	: oracle tool, Toad
--> DB2 : DB2 Client

Create a DB Subnet Group, Add 2 private subnets from Diff AZs (ap-south-1a & ap-south-1b private Subntes).. 

Parameter group : When we launch a DB instance/cluster, we get access to db level only. We dont have any access to OS level. So, we cannot access configuration files/settings related to this DBs. If you want to define custom configurationm create a parameter group and use it.
--> Some time, we may need to reboot the db to take effect this parameter store entries. 


Endpoint Name / Hostname : my-first-mysql-rdsdb.cfpgnjehw330.ap-south-1.rds.amazonaws.com
dbadmin
Avinash1234

nslookup my-first-mysql-rdsdb.cfpgnjehw330.ap-south-1.rds.amazonaws.com ==> to know IP of RDS.


Enable Public Access : Yes.. DB can be accesable over the internet, We can install tools in local device and connect. 
NO : The DB instance will be available to the resources running in same VPC.


--> DB ENgine 
--> Define Username and password (admin & custom/autogenerated)
--> Storage option
--> VPC 

Version : -2 / -1 mechanism.. We don't go with latest version. 
Free Tier : Choose this
Credentials : Define Username and password (admin & custom/autogenerated)
DB Instance class : db.t2.micro
Storage : Min 20gb, Max: 16TB	: 20 GB (Free Tier)

Storage Autoscaling : AWS will add storage automatically when the existing size is 80%.
	--> 10% of existing storage
	--> 5 GB .. WHich ever is higher, AWS choose it.

COnnectivity : 
VPC : CustomVPC
Public Access : No
Port : 3306

Automatic Backup : AWS creates backups automatically.  : Disable
0 --> disable
1 --> Min 
35 --> Max
7 --> Defualt Value

--> We will get DB Endpoint to connect to db instance. We won't get any IP address for this db instances. 


mysql -h my-first-rds.cfpgnjehw330.ap-south-1.rds.amazonaws.com -u dbadmin -P 3306 -p

mysql -h myprdrds.cfpgnjehw330.ap-south-1.rds.amazonaws.com -u dbadmin -P 3306 -p

===========================================

If you are using Linux as jump server : 
1. install mysql : yum install mysql -y
2. connect to mysql using this command :  

mysql -h rdsendpointname -u username -P portno -p
ask for password : 


If you are using Windows as jump server : 
1. Download and install "mysql workbench", then conenct to mysql rds db.


===========================================

Task 1 : Launch a Mysql RDS db instance in CUstomVPCs Private SUbnet. Launch a Windows ec2 instance in custom VPC Public Subnet and Install Mysql workbench then connect to the RDS db instance.   

Task 2 : Launch a Linux ec2 instance in custom VPC Public Subnet and Install Mysql client then connect to the RDS db instance. 


Task 3 : Restore the shared sample db to the rds instance.  Run a SQL command to list all customer information. (SELECT * FROM db.table)


Task 4 : Launch a POSTGRE SQL RDS db instance in CUstomVPCs Private SUbnet. Launch an ec2 instance in custom VPC Public Subnet and Install PGAdmin then connect to the RDS db instance.
(OR)
Task 5 : Launch a MS SQL RDS db (Express) instance in CUstomVPCs Private SUbnet. Launch an ec2 instance in custom VPC Public Subnet and Install "SSMS (SQL Server management Studio)" then connect to the RDS db instance.

================================================================================================


